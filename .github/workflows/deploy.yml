name: Deploy

on:
  release:
    types: [published]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: i686-pc-windows-msvc
          override: true

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.22.0

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BEFORE_ALL_LINUX: "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y"
          CIBW_ENVIRONMENT: 'PATH="$PATH:$HOME/.cargo/bin"'
          CIBW_ENABLE: pypy
          CIBW_BUILD: 'cp37-* cp38-* cp39-* cp310-* cp311-* cp312-* pp*'
          CIBW_SKIP: '*-musllinux*'

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
      name: Build source distribution
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v5

        - run: pip install toml setuptools-rust

        - name: Build sdist
          run: python setup.py sdist

        - uses: actions/upload-artifact@v4
          with:
            name: sdist
            path: dist/*.tar.gz

  upload_pypi:
      needs: [build_wheels, build_sdist]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/download-artifact@v4
          with:
            path: dist
            merge-multiple: true

        - uses: pypa/gh-action-pypi-publish@release/v1
          with:
            user: __token__
            password: ${{ secrets.pypi_password }}
